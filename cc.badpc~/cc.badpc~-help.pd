#N struct 1276-key float status float root float id float x float y
;
#N canvas 256 170 1008 709 10;
#N canvas 886 473 450 300 \$0-output 0;
#X obj 122 115 cc.output~;
#X text 129 99 Volume Control;
#X obj 121 55 inlet~;
#X connect 2 0 0 0;
#X connect 2 0 0 1;
#X restore 100 555 pd \$0-output;
#X obj 100 335 cc.badpc~ 2;
#X obj 100 269 nbx 4 15 -1e+037 1e+037 0 0 empty empty MIDI_Value 48
8 0 10 -257985 -1 -1 0 256;
#N canvas 0 50 472 280 randomize 0;
#X obj 74 101 random 1e+006;
#X obj 74 122 / 1e+006;
#X msg 74 143 noise \$1;
#X obj 74 81 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 158 101 random 22050;
#X obj 236 101 random 1e+006;
#X obj 236 122 / 1e+006;
#X obj 236 81 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 158 122 reduce \$1;
#X msg 320 142 bits \$1;
#X obj 74 183 outlet;
#X obj 158 81 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 320 81 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 74 39 inlet;
#X msg 236 143 overdrive \$1;
#X obj 320 101 random 23;
#X obj 320 122 + 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 0 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 5 0;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 11 0 4 0;
#X connect 12 0 15 0;
#X connect 13 0 12 0;
#X connect 13 0 11 0;
#X connect 13 0 7 0;
#X connect 13 0 3 0;
#X connect 14 0 10 0;
#X connect 15 0 16 0;
#X connect 16 0 9 0;
#X restore 224 290 pd randomize;
#X obj 224 270 bng 15 250 50 0 empty empty hit_it! 17 7 0 10 -257985
-1 -1;
#N canvas 756 413 450 300 instrument 0;
#X obj 37 37 inlet;
#X obj 37 221 *~;
#X obj 37 245 outlet~;
#N canvas 428 227 936 599 vv 0;
#X obj 156 161 inlet~;
#X obj 156 250 *~ 0;
#X obj 156 269 phasor~;
#X obj 156 288 *~ 4;
#X obj 156 307 -~ 2;
#X obj 156 326 abs~;
#X obj 156 345 -~ 1;
#X obj 156 364 outlet~;
#X obj 177 208 samplerate~;
#X obj 177 229 / 2;
#X obj 177 187 r \$0-init;
#X text 279 157 based on one of acriel's random modulation algorithms
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 1 1;
#X connect 10 0 8 0;
#X restore 87 95 pd vv;
#X obj 86 70 noise~;
#X obj 119 204 vline~;
#X obj 37 79 t f b;
#X msg 119 122 1 5 \, 0.25 20 5 \, 0 100 25;
#X obj 37 58 mtof;
#X obj 37 177 cc.waves~/rtri 0.5;
#X obj 37 153 cc.waves~/dphasor;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 3 0 10 1;
#X connect 4 0 3 0;
#X connect 5 0 1 1;
#X connect 6 0 10 0;
#X connect 6 1 7 0;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X restore 100 289 pd instrument;
#N canvas 0 50 450 300 scale 0;
#X msg 111 87 intervals 3 2 2 3 2;
#X obj 111 65 loadbang;
#X obj 111 108 cc.12tet test_scale;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X restore 207 100 pd scale;
#X obj 568 98 nbx 4 15 -1e+037 1e+037 0 0 empty tempo.in empty 0 -8
0 10 -257985 -1 -1 200 256;
#X obj 316 146 loadbang;
#X obj 316 188 s tempo.in;
#X obj 512 118 s start;
#X obj 568 118 s tempo;
#X obj 512 98 tgl 15 0 empty empty empty 20 7 0 10 -257985 -1 -1 0
1;
#X obj 303 251 sel 0;
#X msg 303 272 random one;
#X obj 100 126 metro 200;
#X obj 100 146 cc.12tet/sequence test_scale;
#X obj 100 100 r start;
#X obj 151 100 r tempo;
#X msg 316 167 200;
#X text 510 170 This is a multi-stage distortion module of sorts. Each
stage can be individually disabled. The first argument defines the
oversampling rate by powers of 2, f 66;
#X text 510 147 [cc.badpc~] - Decimator/Bit Reducer with a Foldover
Distortion, f 66;
#X text 319 345 Try playing with some of the paramters and see what
happens!!, f 15;
#X text 510 215 Each stage can be individually disabled or modified
with it’s corresponding parameter. The first stage integrates noise
by modulating its amplitude with the incoming signal and then summing
it. This has the effect of integrating more noise at values further
away from 0, f 66;
#X text 510 282 The middle two stages are designed to reduce the incoming
signal’s quality. The decimator (controlled with the ‘reduce’
parameter) reduces the sampling rate of the incoming signal. The maximum
value is capped at 22050hz. All values above this are kinda worthless
when it comes to distortion. The third stage reduces incoming signal’s
bit depth. The bit reducer (controlled with the ‘bits’ paramter)
reduces an incoming signal’s bit depth. Essentially \, it floors
a certain user defined amount of decimals causing the a stair stepping
effect in the signal. At 2-bits \, the signal becomes a stutter.,
f 66;
#X text 510 404 The fourth stage overdrives the signal by increasing
its amplitude and forcing values that cross -1 and 1 to cross back
over towards zero. The signal will fold over twice before being limited.
This creates tons of extra harmonics \, almost akin to a mediocre overdrive
pedal., f 66;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X connect 7 0 11 0;
#X connect 8 0 19 0;
#X connect 12 0 10 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 15 0 16 0;
#X connect 16 0 2 0;
#X connect 16 1 13 0;
#X connect 17 0 15 0;
#X connect 18 0 15 1;
#X connect 19 0 9 0;
#X coords 0 709 1 708 85 60 0;
