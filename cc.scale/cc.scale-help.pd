#N struct 1067-key float status float x float y;
#N canvas 84 132 1008 709 10;
#N canvas 756 413 450 300 \$0-instrument 0;
#X obj 37 37 inlet;
#X obj 37 149 cc.dphasor~;
#X obj 37 197 *~;
#X obj 37 221 outlet~;
#N canvas 428 227 936 599 vv 0;
#X obj 156 161 inlet~;
#X obj 156 250 *~ 0;
#X obj 156 269 phasor~;
#X obj 156 288 *~ 4;
#X obj 156 307 -~ 2;
#X obj 156 326 abs~;
#X obj 156 345 -~ 1;
#X obj 156 364 outlet~;
#X obj 177 208 samplerate~;
#X obj 177 229 / 2;
#X obj 177 187 r \$0-init;
#X text 279 157 based on one of acriel's random modulation algorithms
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 1 1;
#X connect 10 0 8 0;
#X restore 67 121 pd vv;
#X obj 66 96 noise~;
#X obj 119 180 vline~;
#X obj 37 58 t f b;
#X msg 119 118 1 5 \, 0.25 20 5 \, 0 100 25;
#X obj 37 173 cc.rTri~ 0.5;
#X connect 0 0 7 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 2 1;
#X connect 7 0 1 0;
#X connect 7 1 8 0;
#X connect 8 0 6 0;
#X connect 9 0 2 0;
#X restore 152 343 pd \$0-instrument;
#X msg 152 399 intervals 3 2 2 3 2;
#X msg 282 399 intervals 2 2 1 2 2 2 1;
#X obj 152 173 metro 400;
#X obj 152 142 r start;
#X obj 494 120 s start;
#X obj 494 100 tgl 15 0 empty empty empty 20 7 0 10 -257985 -1 -1 0
1;
#N canvas 1377 236 450 300 \$0-output 0;
#X obj 122 115 cc.output~;
#X text 129 99 Volume Control;
#X obj 121 55 inlet~;
#X connect 2 0 0 0;
#X connect 2 0 0 1;
#X restore 152 364 pd \$0-output;
#X obj 293 106 loadbang;
#X msg 293 127 400;
#X text 492 149 cc.scale - Diatonic Scale Generator;
#X obj 152 437 cc.scale test_scale;
#X obj 152 194 t b b;
#X obj 185 217 array size test_scale;
#X obj 152 281 mtof;
#X obj 152 302 * 32;
#X obj 203 143 nbx 4 15 -1e+037 1e+037 0 0 empty empty tempo 0 -8 0
10 -257985 -1 -1 81 256;
#X obj 152 239 random;
#X obj 152 260 array get test_scale;
#X obj 152 322 nbx 4 15 -1e+037 1e+037 0 0 empty empty pitch 48 8 0
10 -257985 -1 -1 311.127 256;
#X text 492 169 cc.scale translates a list of intervals into an array
of scale values. This array can then be accessed as a set of reference
pitches for other abstractions or objects. It requires an argument
for the name of the array. In this example the array is called 'test_scale'.
, f 60;
#X text 492 236 The UI displays which keys are active within the scale
in yellow. The root note and mode of the scale can also be controlled
via the UI. The above right displays the current set of intervals used
to make up the scale. The random button shuffles these intervals for
a chance to an produce more obscure 12 tone scales., f 60;
#X connect 0 0 7 0;
#X connect 1 0 11 0;
#X connect 2 0 11 0;
#X connect 3 0 12 0;
#X connect 4 0 3 0;
#X connect 6 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 16 0;
#X connect 12 0 17 0;
#X connect 12 1 13 0;
#X connect 13 0 17 1;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 16 0 3 1;
#X connect 17 0 18 0;
#X connect 18 0 14 0;
#X connect 19 0 0 0;
#X coords 0 709 1 708 85 60 0;
